# Generated by Django 4.1.7 on 2023-09-27 00:41

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('cat_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('cat_name', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'category_tb',
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('ingr_id', models.AutoField(primary_key=True, serialize=False)),
                ('ingr_name', models.CharField(max_length=30)),
                ('cat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recommend.category')),
            ],
            options={
                'db_table': 'ingredient_tb',
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('item_id', models.AutoField(primary_key=True, serialize=False)),
                ('ingr_id', models.IntegerField()),
                ('item_name', models.CharField(max_length=20)),
                ('item_image', models.CharField(blank=True, max_length=512, null=True)),
                ('item_price', models.IntegerField()),
                ('item_store', models.CharField(max_length=20)),
                ('item_storelink', models.CharField(max_length=512)),
                ('item_crawling_date', models.DateField()),
            ],
            options={
                'db_table': 'item_tb',
            },
        ),
        migrations.CreateModel(
            name='Vegan',
            fields=[
                ('vegan_id', models.IntegerField(primary_key=True, serialize=False)),
                ('vegan_name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'vegan_tb',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.IntegerField(primary_key=True, serialize=False)),
                ('user_email', models.CharField(max_length=50, null=True)),
                ('user_pwd', models.CharField(max_length=100)),
                ('user_birthday', models.DateField(null=True)),
                ('user_gender', models.CharField(max_length=5, null=True)),
                ('user_activated', models.BooleanField(default=False)),
                ('vegan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recommend.vegan')),
            ],
            options={
                'db_table': 'user_tb',
            },
        ),
        migrations.CreateModel(
            name='Subcat',
            fields=[
                ('subcat_id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('subcat_name', models.CharField(max_length=30)),
                ('cat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recommend.category')),
            ],
            options={
                'db_table': 'subcat_tb',
            },
        ),
        migrations.CreateModel(
            name='IngredientRecommend',
            fields=[
                ('ingr_recommend_pk', models.BigAutoField(primary_key=True, serialize=False)),
                ('ingr_recommend_score', models.FloatField(null=True)),
                ('ingr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recommend.ingredient')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recommend.user')),
            ],
            options={
                'db_table': 'ingredient_recommend_tb',
            },
        ),
        migrations.CreateModel(
            name='IngredientPrice',
            fields=[
                ('ingr_price_id', models.IntegerField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('price', models.IntegerField()),
                ('ingr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recommend.ingredient')),
            ],
            options={
                'db_table': 'ingredient_price_tb',
            },
        ),
        migrations.CreateModel(
            name='IngredientPreference',
            fields=[
                ('ingr_pref_pk', models.BigAutoField(primary_key=True, serialize=False)),
                ('pref_rating', models.FloatField(null=True)),
                ('ingr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recommend.ingredient')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recommend.user')),
            ],
            options={
                'db_table': 'ingredient_preference_tb',
            },
        ),
        migrations.CreateModel(
            name='IngredientGroup',
            fields=[
                ('ingr_group_id', models.AutoField(primary_key=True, serialize=False)),
                ('group_id', models.IntegerField()),
                ('ingr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recommend.ingredient')),
            ],
            options={
                'db_table': 'ingredient_group_tb',
            },
        ),
        migrations.AddField(
            model_name='ingredient',
            name='subcat',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='recommend.subcat'),
        ),
        migrations.AddConstraint(
            model_name='ingredientrecommend',
            constraint=models.UniqueConstraint(fields=('user_id', 'ingr_id'), name='recommend id'),
        ),
        migrations.AddConstraint(
            model_name='ingredientprice',
            constraint=models.UniqueConstraint(fields=('ingr_id', 'date'), name='ingredient date id'),
        ),
        migrations.AddConstraint(
            model_name='ingredientpreference',
            constraint=models.UniqueConstraint(fields=('user_id', 'ingr_id'), name='preference id'),
        ),
        migrations.AddConstraint(
            model_name='ingredientgroup',
            constraint=models.UniqueConstraint(fields=('ingr_id', 'group_id'), name='ingredient group id'),
        ),
    ]
